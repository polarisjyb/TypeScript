"use strict";
/*
  any는 타입들의 대부라고 할 수 있다. any로 뭐든지 할 수 있지만 꼭 필요한 상황이 아니라면 사용하지 않는 것이 좋다.
  타입스크립트에서는 컴파일 타임에 모두가 타입이 있어야 하므로 프로그래머와 타입스크립트 둘 다 타입을 알 수 없는 상황에서는
  기본 타입인 any라고 가정한다. any는 최후의 보루로, 가급적 사용하지 않아야 한다.
  
  타입이란 값과 값으로 수행할 수 있는 작업의 집합이다. any는 모든 값의 집합이므로 any는 모든 것을 할 수 있다.
  즉 any라는 타입의 값이 있으면 덧셈, 곱셈 또는 어떤 함수 호출 등 무슨 작업이든 할 수 있다.

  any를 사용하면 값이 자바스크립트처럼 동작하기 시작하면서 타입 검사기라는 마법이 더 이상 작동하지 않게 된다.
  되도록 any를 피하고 반드시 최후의 수단으로만 사용하자.
*/
/*
let g = e + f 라는 코드에서는 에러가 발생할 것 같지만 (숫자와 배열을 더하는 이상한 작업을 시도)
타입스크립트에 두 개의 any를 더하라고 지시했으므로 에러가 발생하지 않는다.
*/
let e = 666;
let f = ['danger'];
let g = e + f;
console.log(e);
console.log(f);
console.log(g);
console.log(typeof e);
console.log(typeof f);
console.log(typeof g);
/*
  any 단어의 뜻은 '어떤 것이든지, 누구든지'라는 해석을 가진다.
  타입스크립트에서는 '어떤 타입이든' 이라는 의미로 해석할 수 있다.
  타입을 엄격하게 검사하고 처리하는 타입스크립트에서 any 타입은 치명적인 존재이다.
  타입스크립트는 any 타입에 대해 엄격하게 검사 또는 체크하지 않기 때문에 개발 당시에는 문제가 없어서
  개발자의 입장에서는 문제가 없는 코드라고 판단할 수 있지만, 실제로 애플리케이션을 개발하거나 뷰를 개발하면
  any 타입 때문에 문제가 발생하는 경우가 종종 있다.
*/
